# Generated by Django 5.2 on 2025-09-04 13:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('black_invoices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(default='Corporación Agrícola Doña Clara', max_length=100, verbose_name='Nombre de la Empresa')),
                ('rif_empresa', models.CharField(help_text='Ejemplo: J-12345678-9', max_length=20, verbose_name='RIF de la Empresa')),
                ('direccion_empresa', models.TextField(max_length=300, verbose_name='Dirección de la Empresa')),
                ('telefono_empresa', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('porcentaje_iva', models.DecimalField(decimal_places=2, default=16.0, help_text='Porcentaje de IVA aplicable (16% por defecto)', max_digits=5, verbose_name='Porcentaje de IVA')),
                ('aplicar_iva', models.BooleanField(default=True, help_text='Si se debe aplicar IVA a las ventas', verbose_name='Aplicar IVA')),
                ('numero_factura_actual', models.PositiveIntegerField(default=1, help_text='Próximo número de factura a generar', verbose_name='Número de Factura Actual')),
                ('numero_nota_entrega_actual', models.PositiveIntegerField(default=1, help_text='Próximo número de nota de entrega a generar', verbose_name='Número de Nota de Entrega Actual')),
                ('api_tasa_activa', models.BooleanField(default=True, help_text='Si debe actualizarse automáticamente la tasa de cambio', verbose_name='API de Tasa Activa')),
                ('api_tasa_url', models.URLField(default='https://api.exchangerate-api.com/v4/latest/USD', help_text='URL para obtener la tasa de cambio', verbose_name='URL de API de Tasa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuración del Sistema',
            },
        ),
        migrations.AddField(
            model_name='factura',
            name='iva',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='IVA'),
        ),
        migrations.AddField(
            model_name='factura',
            name='numero_factura',
            field=models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='Número de Factura'),
        ),
        migrations.AddField(
            model_name='factura',
            name='subtotal',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Subtotal (sin IVA)'),
        ),
        migrations.CreateModel(
            name='NotaEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_nota', models.PositiveIntegerField(unique=True, verbose_name='Número de Nota')),
                ('fecha_nota', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Nota')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Subtotal (sin IVA)')),
                ('iva', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='IVA')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total con IVA')),
                ('monto_pagado', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Monto Pagado')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('convertida_a_factura', models.BooleanField(default=False, verbose_name='Convertida a Factura')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_entrega', to='black_invoices.cliente', verbose_name='Cliente')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_entrega_generadas', to='black_invoices.empleado', verbose_name='Empleado')),
                ('factura_generada', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nota_entrega_origen', to='black_invoices.factura', verbose_name='Factura Generada')),
            ],
            options={
                'verbose_name': 'Nota de Entrega',
                'verbose_name_plural': 'Notas de Entrega',
                'ordering': ['-fecha_nota'],
            },
        ),
        migrations.CreateModel(
            name='DetalleNotaEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Precio Unitario')),
                ('subtotal_linea', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Subtotal')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.producto', verbose_name='Producto')),
                ('nota_entrega', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_nota', to='black_invoices.notaentrega', verbose_name='Nota de Entrega')),
            ],
            options={
                'verbose_name': 'Detalle de Nota de Entrega',
                'verbose_name_plural': 'Detalles de Nota de Entrega',
                'ordering': ['producto__nombre'],
            },
        ),
    ]
