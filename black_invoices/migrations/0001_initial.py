# Generated by Django 5.2 on 2025-09-04 05:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(help_text='Formato: V12345678 o E12345678', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='La cédula debe tener el formato V12345678 o E12345678', regex='^[VE]-?\\d{6,8}$')], verbose_name='Cédula')),
                ('nombre', models.CharField(max_length=20, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=20, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo Electrónico (Opcional)')),
                ('telefono', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('direccion', models.CharField(max_length=200, verbose_name='Dirección')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConsultaComision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango_inferior', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rango Inferior')),
                ('rango_superior', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rango Superior')),
                ('porcentaje', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Porcentaje de Comisión')),
            ],
            options={
                'verbose_name': 'Rango de Comisión',
                'verbose_name_plural': 'Rangos de Comisiones',
                'ordering': ['rango_inferior'],
            },
        ),
        migrations.CreateModel(
            name='NivelAcceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Nivel de Acceso',
                'verbose_name_plural': 'Niveles de Acceso',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(help_text='Describe las características del producto', max_length=200, verbose_name='Descripción')),
                ('precio', models.DecimalField(decimal_places=2, help_text='Precio en dólares (Máximo: $5,000.00)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, message='El precio no puede ser menor a $0.01'), django.core.validators.MaxValueValidator(5000.0, message='El precio no puede ser mayor a $5,000.00')], verbose_name='Precio')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Cantidad disponible (Máximo: 100,000 unidades)', validators=[django.core.validators.MaxValueValidator(100000, message='El stock no puede ser mayor a 100,000 unidades')], verbose_name='Stock disponible')),
                ('activo', models.BooleanField(default=True, verbose_name='Producto activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última modificación')),
                ('precio_compra', models.DecimalField(decimal_places=2, default=0.01, help_text='Precio de compra en dólares', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, message='El precio de compra no puede ser menor a $0.01'), django.core.validators.MaxValueValidator(5000.0, message='El precio de compra no puede ser mayor a $5,000.00')], verbose_name='Precio de Compra')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='StatusVentas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre del Estado')),
                ('vent_cancelada', models.BooleanField(default=False, verbose_name='Venta Cancelada')),
                ('vent_espera', models.BooleanField(default=False, verbose_name='Venta en Espera')),
            ],
            options={
                'verbose_name': 'Estado de Venta',
                'verbose_name_plural': 'Estados de Venta',
            },
        ),
        migrations.CreateModel(
            name='TasaCambio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(unique=True, verbose_name='Fecha')),
                ('tasa_usd_ves', models.DecimalField(decimal_places=4, help_text='Cuántos bolívares equivale 1 dólar', max_digits=12, verbose_name='Tasa USD -> VES')),
                ('fuente', models.CharField(default='BCV', help_text='Fuente de la tasa (BCV, Manual, API)', max_length=50, verbose_name='Fuente')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Tasa de Cambio',
                'verbose_name_plural': 'Tasas de Cambio',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='TipoFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credito_fac', models.BooleanField(default=False, verbose_name='Factura a Crédito')),
                ('contado_fac', models.BooleanField(default=True, verbose_name='Factura de Contado')),
                ('plazo_credito', models.IntegerField(blank=True, choices=[(30, '30 días'), (60, '60 días'), (90, '90 días')], null=True, verbose_name='Plazo de Crédito')),
            ],
            options={
                'verbose_name': 'Tipo de Factura',
                'verbose_name_plural': 'Tipos de Factura',
            },
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ejemplo: Kilogramos, Metros, Unidades', max_length=30, unique=True, verbose_name='Nombre')),
                ('abreviatura', models.CharField(help_text='Ejemplo: kg, m, un, cm, g', max_length=10, unique=True, verbose_name='Abreviatura')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada de la unidad de medida', max_length=200, verbose_name='Descripción')),
                ('permite_decimales', models.BooleanField(default=True, help_text='Si se pueden vender cantidades decimales (ej: 2.5 kg)', verbose_name='Permite Decimales')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Unidad de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=20, verbose_name='Apellido')),
                ('fecha_contratacion', models.DateField(auto_now_add=True, verbose_name='Fecha de contratación')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('nivel_acceso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.nivelacceso')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_fac', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Facturación')),
                ('total_fac', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Factura')),
                ('metodo_pag', models.CharField(choices=[('efectivo', 'Efectivo'), ('tarjeta', 'Tarjeta'), ('transferencia', 'Transferencia'), ('credito', 'Crédito'), ('otro', 'Otro')], default='efectivo', max_length=20, verbose_name='Método de Pago')),
                ('total_venta', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total de Venta')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facturas', to='black_invoices.cliente', verbose_name='Cliente')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facturas_generadas', to='black_invoices.empleado', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'ordering': ['-fecha_fac'],
            },
        ),
        migrations.CreateModel(
            name='TablaConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_fact', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Factura')),
                ('porcent_comis', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Porcentaje Comisión')),
                ('fecha_config', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Configuración')),
                ('activo', models.BooleanField(default=True, verbose_name='Configuración Activa')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.empleado', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Configuración',
                'verbose_name_plural': 'Configuraciones',
                'ordering': ['-fecha_config'],
            },
        ),
        migrations.CreateModel(
            name='DetalleFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('sub_total', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Sub-Total')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.factura', verbose_name='Factura')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.producto', verbose_name='Producto')),
                ('tipo_factura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.tipofactura', verbose_name='Tipo de Factura')),
            ],
            options={
                'verbose_name': 'Detalle de Factura',
                'verbose_name_plural': 'Detalles de Factura',
                'ordering': ['-factura', 'producto'],
            },
        ),
        migrations.AddField(
            model_name='producto',
            name='unidad_medida',
            field=models.ForeignKey(blank=True, help_text='Unidad en la que se vende este producto', null=True, on_delete=django.db.models.deletion.PROTECT, to='black_invoices.unidadmedida', verbose_name='Unidad de Medida'),
        ),
        migrations.CreateModel(
            name='Ventas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_venta', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Venta')),
                ('credito', models.BooleanField(default=False, verbose_name='Venta a Crédito')),
                ('monto_pagado', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Monto Pagado')),
                ('requiere_autorizacion', models.BooleanField(default=True, verbose_name='Requiere Autorización')),
                ('autorizada', models.BooleanField(default=False, verbose_name='Venta Autorizada')),
                ('fecha_autorizacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Autorización')),
                ('comentarios_autorizacion', models.TextField(blank=True, null=True, verbose_name='Comentarios de Autorización')),
                ('autorizada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ventas_autorizadas', to='black_invoices.empleado', verbose_name='Autorizada por')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.empleado', verbose_name='Empleado')),
                ('factura', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.factura', verbose_name='Factura')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.statusventas', verbose_name='Estado de la Venta')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'ordering': ['-fecha_venta'],
            },
        ),
        migrations.CreateModel(
            name='PagoVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto Pagado')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('tarjeta', 'Tarjeta de Débito/Crédito'), ('pago_movil', 'Pago Móvil'), ('transferencia', 'Transferencia Bancaria'), ('otro', 'Otro')], default='efectivo', max_length=20, verbose_name='Método de Pago')),
                ('referencia', models.CharField(blank=True, help_text='Número de referencia, confirmación o voucher', max_length=50, null=True, verbose_name='Referencia/Número')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Pago')),
                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='black_invoices.ventas')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Comision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_venta', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto de venta')),
                ('fecha_comision', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Comisión')),
                ('total_comision', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Total de Comisión')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.empleado', verbose_name='Empleado')),
                ('venta', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='black_invoices.ventas', verbose_name='Venta Asociada')),
            ],
            options={
                'verbose_name': 'Comisión',
                'verbose_name_plural': 'Comisiones',
                'ordering': ['-fecha_comision'],
            },
        ),
    ]
