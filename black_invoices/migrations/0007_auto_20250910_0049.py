# Generated by Django 5.2 on 2025-09-10 04:49

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings


def migrar_datos_empleados(apps, schema_editor):
    """Migrar datos existentes de empleados al nuevo formato"""
    Empleado = apps.get_model('black_invoices', 'Empleado')
    
    for empleado in Empleado.objects.all():
        # Generar cédula temporal basada en el usuario
        if empleado.user:
            cedula_temp = f"V{empleado.user.id:08d}"  # V + ID del usuario con 8 dígitos
        else:
            cedula_temp = f"V{empleado.id:08d}"  # V + ID del empleado con 8 dígitos
        
        empleado.cedula = cedula_temp
        # Expandir campos de nombre/apellido si están truncados
        if len(empleado.nombre) == 20 and empleado.nombre == empleado.nombre[:20]:
            # Si el nombre fue truncado, intentar usar el nombre del usuario
            if empleado.user and empleado.user.first_name:
                empleado.nombre = empleado.user.first_name[:50]
        if len(empleado.apellido) == 20 and empleado.apellido == empleado.apellido[:20]:
            # Si el apellido fue truncado, intentar usar el apellido del usuario
            if empleado.user and empleado.user.last_name:
                empleado.apellido = empleado.user.last_name[:50]
        
        # Asignar email del usuario si existe
        if empleado.user and empleado.user.email:
            empleado.email = empleado.user.email
            
        empleado.save()


def revertir_migracion(apps, schema_editor):
    """Función para revertir la migración si es necesario"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('black_invoices', '0006_alter_detallefactura_factura'),
    ]

    operations = [
        # 1. Hacer user opcional
        migrations.AlterField(
            model_name='empleado',
            name='user',
            field=models.OneToOneField(
                blank=True,
                help_text='Usuario para acceso al sistema (opcional)',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Usuario del Sistema'
            ),
        ),
        
        # 2. Expandir campos existentes
        migrations.AlterField(
            model_name='empleado',
            name='nombre',
            field=models.CharField(max_length=50, verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='empleado',
            name='apellido',
            field=models.CharField(max_length=50, verbose_name='Apellido'),
        ),
        
        # 3. Agregar nuevos campos con valores temporales
        migrations.AddField(
            model_name='empleado',
            name='cedula',
            field=models.CharField(
                default='V00000000',
                help_text='Cédula de identidad del empleado',
                max_length=12,
                unique=True,
                verbose_name='Cédula'
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='empleado',
            name='email',
            field=models.EmailField(
                blank=True,
                max_length=254,
                null=True,
                verbose_name='Correo Electrónico'
            ),
        ),
        migrations.AddField(
            model_name='empleado',
            name='telefono',
            field=models.CharField(
                blank=True,
                max_length=15,
                null=True,
                verbose_name='Teléfono'
            ),
        ),
        migrations.AddField(
            model_name='empleado',
            name='direccion',
            field=models.TextField(
                blank=True,
                null=True,
                verbose_name='Dirección'
            ),
        ),
        
        # 4. Migrar datos existentes
        migrations.RunPython(migrar_datos_empleados, revertir_migracion),
        
        # 5. Actualizar Meta ordering
        migrations.AlterModelOptions(
            name='empleado',
            options={
                'ordering': ['apellido', 'nombre'],
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados'
            },
        ),
    ]
